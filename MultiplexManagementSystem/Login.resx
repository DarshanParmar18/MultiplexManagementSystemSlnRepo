<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>